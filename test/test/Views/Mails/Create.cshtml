@{
    ViewData["Title"] = "Create Email";
}
<div class="container-fluid py-4">
    <div class="card">
       
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Create Email</h5>
            <a href="/Mails" class="btn btn-light btn-sm">
                <i class="fas fa-arrow-left"></i> Back
            </a>
        </div>

        <div class="card-body p-4">
            <form id="createMailForm">
                <input type="hidden" id="Id" name="Id" />
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="Subject" class="form-label fw-bold">Subject</label>
                            <input type="text" id="Subject" name="Subject" class="form-control" />
                            <span class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label for="Email" class="form-label fw-bold">Email</label>
                            <select id="Email" name="Email" class="form-control email-select" data-placeholder="Search for an email..."></select>
                            <span class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="EmailCc" class="form-label fw-bold">CC</label>
                                    <select id="EmailCc" name="EmailCc" class="form-control email-select" multiple="multiple" data-placeholder="Search for CC emails..."></select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="EmailBcc" class="form-label fw-bold">BCC</label>
                                    <select id="EmailBcc" name="EmailBcc" class="form-control email-select" multiple="multiple" data-placeholder="Search for BCC emails..."></select>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="Location" class="form-label fw-bold">Location</label>
                                    <input type="text" id="Location" name="Location" class="form-control" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="MailType" class="form-label fw-bold">Mail Type</label>
                                    <select id="MailType" name="MailType" class="form-select">
                                        <option value="1">Type 1</option>
                                        <option value="2">Type 2</option>
                                        <option value="3">Type 3</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="Organizer" class="form-label fw-bold">Organizer</label>
                                    <input type="text" id="Organizer" name="Organizer" class="form-control" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="OrganizerMail" class="form-label fw-bold">Organizer Mail</label>
                                    <input type="text" id="OrganizerMail" name="OrganizerMail" class="form-control" />
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="FromDate" class="form-label fw-bold">From Date</label>
                                    <input type="datetime-local" id="FromDate" name="FromDate" class="form-control" />
                                    <span class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="ToDate" class="form-label fw-bold">To Date</label>
                                    <input type="datetime-local" id="ToDate" name="ToDate" class="form-control" />
                                    <span class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="SendTime" class="form-label fw-bold">Send Time</label>
                                    <input type="datetime-local" id="SendTime" name="SendTime" class="form-control" />
                                    <span class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="CreateTime" class="form-label fw-bold">Create Time</label>
                                    <input type="datetime-local" id="CreateTime" name="CreateTime" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" readonly />
                                    <span class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <label class="form-label fw-bold">Email Content</label>
                                <div class="btn-group">
                                    <button type="button" class="btn btn-outline-primary btn-sm active" data-view="rendered">
                                        Preview
                                    </button>
                                    <button type="button" class="btn btn-outline-primary btn-sm" data-view="raw">
                                        HTML
                                    </button>
                                </div>
                            </div>
                            
                            <textarea id="editor" name="EmailContent" class="form-control mb-3" style="min-height: 400px;"></textarea>
                            <div class="border rounded">
                                <div id="previewContent" class="p-3 bg-light" style="max-height: 500px; overflow-y: auto;">
                                </div>
                                <div id="rawContent" class="p-3 bg-light d-none" style="max-height: 500px; overflow-y: auto;">
                                    <pre><code></code></pre>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-end gap-2 mt-4 pt-3 border-top">
                    <a href="/Mails" class="btn btn-secondary">
                        Cancel
                    </a>
                    <button type="submit" class="btn btn-primary">
                        Create
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Load email options once when page loads
            async function initializeEmailSelects() {
                try {
                    const response = await axios.get('http://localhost:5001/api/PersonalProfile/filter-options');
                    if (response.data.success) {
                        const emailData = response.data.data.map(item => ({
                            id: item.email,
                            text: `${item.fullName} (${item.email})`
                        }));

                        // Initialize main email select
                        $('#Email').select2({
                            width: '100%',
                            placeholder: 'Search for an email...',
                            allowClear: true,
                            data: emailData,
                            matcher: function(params, data) {
                                // Return all options if no search term
                                if (!params.term) {
                                    return data;
                                }
                                
                                // Search in both name and email
                                const searchTerm = params.term.toLowerCase();
                                const text = data.text.toLowerCase();
                                
                                if (text.includes(searchTerm)) {
                                    return data;
                                }
                                return null;
                            }
                        });

                        // Initialize CC and BCC selects
                        $('#EmailCc, #EmailBcc').select2({
                            width: '100%',
                            placeholder: 'Search for emails...',
                            allowClear: true,
                            multiple: true,
                            data: emailData,
                            matcher: function(params, data) {
                                if (!params.term) {
                                    return data;
                                }
                                
                                const searchTerm = params.term.toLowerCase();
                                const text = data.text.toLowerCase();
                                
                                if (text.includes(searchTerm)) {
                                    return data;
                                }
                                return null;
                            }
                        });
                    }
                } catch (error) {
                    console.error('Error loading email options:', error);
                }
            }

            // Initialize email selects
            initializeEmailSelects();

            $('#editor').summernote({
                height: 400,
                maxHeight: 800,
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'underline', 'clear']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['table', ['table']],
                    ['insert', ['link']],
                    ['view', ['fullscreen', 'codeview']]
                ],
                callbacks: {
                    onChange: function(contents) {
                        updatePreview(contents);
                    }
                }
            });

            updatePreview($('#editor').summernote('code'));

            $('.btn-group button').click(function() {
                $('.btn-group button').removeClass('active');
                $(this).addClass('active');
                
                const view = $(this).data('view');
                if (view === 'rendered') {
                    $('#previewContent').removeClass('d-none');
                    $('#rawContent').addClass('d-none');
                } else {
                    $('#previewContent').addClass('d-none');
                    $('#rawContent').removeClass('d-none');
                }
            });

            $('form').on('submit', async function(e) {
                e.preventDefault();
                
                const formData = {
                    subject: $('#Subject').val(),
                    email: $('#Email').val(),
                    emailCc: $('#EmailCc').val()?.join(';') || '',
                    emailBcc: $('#EmailBcc').val()?.join(';') || '',
                    location: $('#Location').val(),
                    mailType: parseInt($('#MailType').val()),
                    organizer: $('#Organizer').val(),
                    organizerMail: $('#OrganizerMail').val(),
                    fromDate: $('#FromDate').val(),
                    toDate: $('#ToDate').val(),
                    sendTime: $('#SendTime').val(),
                    createTime: $('#CreateTime').val(),
                    emailContent: $('#editor').summernote('code')
                };

                try {
                    const token = localStorage.getItem('token');
                    const response = await axios.post('http://localhost:5001/api/Mails', formData, {
                        headers: {
                            'Authorization': `Bearer ${token}`,
                            'Content-Type': 'application/json'
                        }
                    });

                    if (response.data.success) {
                        alert('Email created successfully!');
                        window.location.href = '/Mails';
                    } else {
                        alert('Failed to create email: ' + response.data.message);
                    }
                } catch (error) {
                    console.error('Error creating email:', error);
                    alert('Failed to create email. Please try again.');
                }
            });
        });

        function updatePreview(content) {
            $('#previewContent').html(content);
            $('#rawContent pre code').text(content);
        }
    </script>
}

@section Styles {
    <link href="~/css/select2-custom.css" rel="stylesheet" />
}

