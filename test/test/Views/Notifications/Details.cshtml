@{
    ViewData["Title"] = "Notification Details";
}

<div class="container-fluid px-4">
    <div class="card shadow mb-4" data-notification-id="">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
                <i class="fas fa-bell me-2"></i>Notification Details
            </h5>
            <div class="d-flex gap-2">
                <!-- Buttons will be dynamically inserted here by permission-handler.js -->
            </div>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="fw-bold">ID:</label>
                        <p id="notificationId"></p>
                    </div>
                    <div class="mb-3">
                        <label class="fw-bold">Email:</label>
                        <p id="email"></p>
                    </div>
                    <div class="mb-3">
                        <label class="fw-bold">From:</label>
                        <p id="from"></p>
                    </div>
                    <div class="mb-3">
                        <label class="fw-bold">URL:</label>
                        <p id="url"></p>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="fw-bold">Type:</label>
                        <p id="type"></p>
                    </div>
                    <div class="mb-3">
                        <label class="fw-bold">Created Time:</label>
                        <p id="createdTime"></p>
                    </div>
                    <div class="mb-3">
                        <label class="fw-bold">Last Modified:</label>
                        <p id="lastModified"></p>
                    </div>
                    <div class="mb-3">
                        <label class="fw-bold">Status:</label>
                        <p id="status"></p>
                    </div>
                </div>
                <div class="col-12">
                    <div class="mb-3">
                        <label class="fw-bold">Content:</label>
                        <div id="content" class="border rounded p-3 bg-light"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Define resources for JavaScript
        window.notificationResources = {
            delete: '@test.Resources.Notification.Details.Resource.Delete',
            back: '@test.Resources.Notification.Details.Resource.Back',
            edit: '@test.Resources.Notification.Details.Resource.Edit',    
        };
    </script>
    <script>
        $(document).ready(function() {
            loadNotificationDetails();
        });

        async function loadNotificationDetails() {
            try {
                const token = localStorage.getItem('token');
                if (!token) {
                    window.location.href = '/Account/Login';
                    return;
                }

                const notificationId = window.location.pathname.split('/').pop();

                const response = await axios.get(`http://localhost:5001/api/Notifications/${notificationId}`, {
                    headers: { Authorization: `Bearer ${token}` }
                });

                if (response.data.success) {
                    const notification = response.data.data;
                    displayNotificationDetails(notification);
                }
            } catch (error) {
                console.error('Error loading notification details:', error);
                if (error.response?.status === 403) {
                    window.location.href = '/Account/AccessDenied';
                } else if (error.response?.status === 401) {
                    window.location.href = '/Account/Login';
                }
            }
        }

        function displayNotificationDetails(notification) {
            $('.card').attr('data-notification-id', notification.id);
            
            $('#notificationId').text(notification.id);
            $('#email').text(notification.email || '');
            $('#from').text(notification.from || '');
            $('#url').text(notification.url || '');
            $('#type').text(notification.type || '');
            $('#createdTime').text(formatDateTime(notification.createdTime));
            $('#lastModified').text(formatDateTime(notification.lastModified));
            $('#content').html(notification.content || '');
            
            // Display read/seen status
            let status = [];
            if (notification.isRead) status.push('Read');
            else status.push('Unread');
            if (notification.isSeen) status.push('Seen');
            else status.push('Unseen');
            
            $('#status').html(`
                <span class="badge ${notification.isRead ? 'bg-success' : 'bg-warning'} me-2">
                    ${status[0]}
                </span>
                <span class="badge ${notification.isSeen ? 'bg-info' : 'bg-secondary'}">
                    ${status[1]}
                </span>
            `);
        }

        function formatDateTime(dateString) {
            if (!dateString) return '';
            return new Date(dateString).toLocaleString();
        }

        function editNotification() {
            const notificationId = $('#notificationId').text();
            window.location.href = `/Notifications/Edit/${notificationId}`;
        }

        function deleteNotification() {
            const notificationId = $('#notificationId').text();
            
            if (!confirm('Are you sure you want to delete this notification?')) {
                return;
            }

            const token = localStorage.getItem('token');
            
            axios.delete(`http://localhost:5001/api/Notifications/${notificationId}`, {
                headers: { Authorization: `Bearer ${token}` }
            })
            .then(() => {
                window.location.href = '/Notifications';
            })
            .catch(error => {
                console.error('Error deleting notification:', error);
                alert('Error deleting notification');
            });
        }
    </script>
    <script src="~/js/notifications/Details/permission-handler.js"></script>
}

