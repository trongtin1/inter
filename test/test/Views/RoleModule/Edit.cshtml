@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Edit Role Module";
}

<style>
    .permission-checkbox {
        width: 20px;
        height: 20px;
        cursor: pointer;
    }
    
    .table td {
        vertical-align: middle;
    }
</style>

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Edit Role Module</h2>
        <a href="/RoleModule/Create" class="btn btn-success">Create New</a>
    </div>
    <div id="roleModuleForm">
        <h3 id="roleName"></h3>
        
        <!-- Thêm ô tìm kiếm -->
        <div class="mb-3">
            <input type="text" id="searchInput" class="form-control" placeholder="Tìm kiếm module...">
        </div>

        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Module Name</th>
                        <th>Create</th>
                        <th>Read</th>
                        <th>Update</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody id="modulePermissions">
                    <!-- Module permissions will be loaded here -->
                </tbody>
            </table>
        </div>
        <div class="mt-3">
            <button class="btn btn-primary" onclick="saveChanges()">Save Changes</button>
            <a href="/RoleModule" class="btn btn-secondary">Back to List</a>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        let roleId;
        let allModules = []; // Thêm biến để lưu trữ tất cả modules

        $(document).ready(function() {
            // Get roleId from URL
            const pathSegments = window.location.pathname.split('/');
            roleId = pathSegments[pathSegments.length - 1];
            loadRoleModuleData();
            
            // Thêm sự kiện tìm kiếm
            $('#searchInput').on('input', function() {
                filterModules($(this).val());
            });
        });

        async function loadRoleModuleData() {
            try {
                const response = await axios.get(`/api/RoleModules/${roleId}`);
                const roleModule = response.data.data;

                $('#roleName').text(`Role: ${roleModule.roleName}`);
                allModules = roleModule.modules; // Lưu trữ tất cả modules
                renderModules(allModules); // Tách hàm render ra riêng
            } catch (error) {
                console.error('Error loading role module data:', error);
                alert('Failed to load role module data');
            }
        }

        // Thêm hàm render modules
        function renderModules(modules) {
            const tbody = $('#modulePermissions');
            tbody.empty();

            modules.forEach(module => {
                tbody.append(`
                    <tr>
                        <td>${module.moduleName}</td>
                        <td>
                            <input type="checkbox" class="permission-checkbox" 
                                data-moduleid="${module.moduleId}" 
                                data-permission="create" 
                                ${module.canCreate ? 'checked' : ''}>
                        </td>
                        <td>
                            <input type="checkbox" class="permission-checkbox" 
                                data-moduleid="${module.moduleId}" 
                                data-permission="read" 
                                ${module.canRead ? 'checked' : ''}>
                        </td>
                        <td>
                            <input type="checkbox" class="permission-checkbox" 
                                data-moduleid="${module.moduleId}" 
                                data-permission="update" 
                                ${module.canUpdate ? 'checked' : ''}>
                        </td>
                        <td>
                            <input type="checkbox" class="permission-checkbox" 
                                data-moduleid="${module.moduleId}" 
                                data-permission="delete" 
                                ${module.canDelete ? 'checked' : ''}>
                        </td>
                    </tr>
                `);
            });
        }

        // Thêm hàm lọc modules
        function filterModules(searchText) {
            searchText = searchText.toLowerCase();
            const filteredModules = allModules.filter(module => 
                module.moduleName.toLowerCase().includes(searchText)
            );
            renderModules(filteredModules);
        }

        async function saveChanges() {
            try {
                const modulePermissions = [];

                $('.permission-checkbox').each(function() {
                    const moduleId = $(this).data('moduleid');
                    const permission = $(this).data('permission');
                    
                    // Tìm hoặc tạo mới object permission cho moduleId
                    let modulePermission = modulePermissions.find(p => p.moduleId === parseInt(moduleId));
                    if (!modulePermission) {
                        modulePermission = {
                            roleId: parseInt(roleId),
                            moduleId: parseInt(moduleId),
                            canCreate: false,
                            canRead: false,
                            canUpdate: false,
                            canDelete: false
                        };
                        modulePermissions.push(modulePermission);
                    }

                    // Cập nhật quyền tương ứng
                    switch(permission) {
                        case 'create': modulePermission.canCreate = $(this).prop('checked'); break;
                        case 'read': modulePermission.canRead = $(this).prop('checked'); break;
                        case 'update': modulePermission.canUpdate = $(this).prop('checked'); break;
                        case 'delete': modulePermission.canDelete = $(this).prop('checked'); break;
                    }
                });

                // Gọi API mới để cập nhật permissions
                await axios.put('/api/RoleModules/', modulePermissions);

                alert('Permissions updated successfully');
                window.location.href = '/Roles';
            } catch (error) {
                console.error('Error saving permissions:', error);
                alert('Failed to save permissions: ' + (error.response?.data?.message || error.message));
            }
        }
    </script>
}
