@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "User Role";
}

<style>
    .modal-content {
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .modal-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
        padding: 1rem;
    }

    .modal-title {
        color: #212529;
        font-weight: 600;
    }

    .modal-body {
        padding: 1.5rem;
    }

    .modal-footer {
        background-color: #f8f9fa;
        border-top: 1px solid #dee2e6;
        border-bottom-left-radius: 8px;
        border-bottom-right-radius: 8px;
        padding: 1rem;
    }

    .form-check {
        margin-bottom: 0.5rem;
        padding-left: 1.75rem;
    }

    .form-check-input {
        cursor: pointer;
    }

    .form-check-label {
        cursor: pointer;
        color: #495057;
    }

    #editUserName {
        font-weight: 600;
        color:black;
    }
</style>

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>User Role</h2>
        <a href="/UserRoles/Create" class="btn btn-success">Create New User Role</a>
    </div>

    <!-- Modal Edit -->
    <div class="modal fade" id="editModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit User Roles</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <h6><span id="editUserName"></span></h6>
                    <div id="rolesList" class="mt-3">
                        <!-- Roles will be listed here -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-danger" onclick="deleteSelectedRoles()">Delete Selected</button>
                </div>
            </div>
        </div>
    </div>

    <table class="table" id="usersTable">
        <thead>
            <tr>
                <th>Username</th>
                <th>Role Name</th>
                <th>Action</th>
            </tr>

        </thead>
        <tbody>
            <!-- Data will be added here -->
        </tbody>
    </table>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentUserId = null;
        let editModal = null;

        $(document).ready(function () {
            loadUserRole();
            editModal = new bootstrap.Modal(document.getElementById('editModal'));
        });

        async function loadUserRole() {
            try {
                const response = await axios.get('/api/UserRoles');
                const users = response.data.data;
                const tbody = $('#usersTable tbody');

                tbody.empty();
                users.forEach(user => {
                    const roleNames = user.roles.map(role => role.name).join(', ');
                    tbody.append(`
                        <tr>
                            <td>${user.username}</td>
                            <td>${roleNames}</td>
                            <td>
                                <button class="btn btn-primary btn-sm edit-user-role" 
                                    data-userid="${user.userId}">Edit</button>
                         
                            </td>
                        </tr>
                    `);
                });

                // Update click handlers
                $('.edit-user-role').on('click', function () {
                    const userId = $(this).data('userid');
                    editUserRole(userId);
                });

                $('.delete-user-role').on('click', function () {
                    const userId = $(this).data('userid');
                    deleteUserRole(userId);
                });

            } catch (error) {
                console.error('Error loading user roles:', error);
                alert('Failed to load user roles');
            }
        }

        async function editUserRole(userId) {
            try {
                currentUserId = userId;
                const response = await axios.get(`/api/UserRoles/${userId}`);
                const userData = response.data.data;

                $('#editUserName').text(userData.username);
                
                // Populate roles list with checkboxes
                const rolesList = $('#rolesList');
                rolesList.empty();
                
                userData.roles.forEach(role => {
                    rolesList.append(`
                        <div class="form-check">
                            <input class="form-check-input role-checkbox" 
                                type="checkbox" 
                                value="${role.id}" 
                                id="role${role.id}">
                            <label class="form-check-label" for="role${role.id}">
                                ${role.name}
                            </label>
                        </div>
                    `);
                });

                editModal.show();
            } catch (error) {
                console.error('Error fetching user roles:', error);
                alert('Failed to load user roles');
            }
        }

        async function deleteSelectedRoles() {
            const selectedRoles = [];
            $('.role-checkbox:checked').each(function() {
                selectedRoles.push(parseInt($(this).val()));
            });

            if (selectedRoles.length === 0) {
                alert('Please select roles to delete');
                return;
            }

            if (!confirm('Are you sure you want to delete the selected roles?')) {
                return;
            }

            try {
                const response = await axios.delete('/api/UserRoles/delete', {
                    data: {
                        userId: currentUserId,
                        roleIds: selectedRoles
                    }
                });

                if (response.data.success) {
                    editModal.hide();
                    loadUserRole(); // Refresh the table
                    alert('Roles deleted successfully');
                }
            } catch (error) {
                console.error('Error deleting roles:', error);
                alert('Failed to delete roles');
            }
        }
    </script>

}
